'@Folder("Classes")
Option Explicit

'================================================================================================
' Class:       cForecastItem
' Purpose:     Represents a single, generic item to be forecasted.
' Version:     3.7
' Author:      Ayush Goyal
' Date:        22-Aug-2025
'
' Change Log:
' V3.7:        - BUGFIX: Corrected an invalid single-line If..Else statement in GetProp
'                to be a proper multi-line block, resolving a compile error.
' V3.6:        - BUGFIX: Corrected an invalid single-line If..ElseIf statement in AddProp.
' V3.5:        - REFACTOR: All dictionary objects are now created using the central
'                mUtilities.NewDict() factory function for consistency.
'================================================================================================

Private m_Properties As Object
Private m_ForecastValues As Object
Private Const DEFAULT_PHASE_OUT_PCT As Double = 1#

Public Property Get Affiliate() As String: Affiliate = GetProp("Affiliate"): End Property
Public Property Get ForecastTier() As String: ForecastTier = GetProp("Tier"): End Property
Public Property Get ForecastSubTier() As String: ForecastSubTier = GetProp("SubTier"): End Property
Public Property Get LocalItemNbr() As String: LocalItemNbr = GetProp("LocalItemNbr"): End Property
Public Property Get Description() As String: Description = GetProp("Description"): End Property
Public Property Get ISD() As String: ISD = GetProp("ISD"): End Property
Public Property Get Status() As ProductStatus: Status = GetProp("Status"): End Property
Public Property Get PhaseOutDate() As Variant
    Dim val As Variant: val = GetProp("PhaseOutDate")
    If IsDate(val) And val > 0 Then PhaseOutDate = val Else PhaseOutDate = Empty
End Property
Public Property Get PhaseOutPercent() As Double: PhaseOutPercent = GetProp("PhaseOutPercent"): End Property
Public Property Get SupersededByProductID() As String: SupersededByProductID = GetProp("SupersededBy"): End Property
Public Property Get IsPhasingOut() As Boolean: IsPhasingOut = (Me.Status = psPhaseOut Or Me.Status = psDiscontinued): End Property
Public Property Get IsPhasingIn() As Boolean: IsPhasingIn = GetProp("IsPhasingIn", False): End Property
Public Property Get PhaseInDate() As Date: PhaseInDate = GetProp("PhaseInDate"): End Property
Public Property Get PhaseInPercent() As Double: PhaseInPercent = GetProp("PhaseInPercent"): End Property
Public Property Get ForecastValues() As Object: Set ForecastValues = m_ForecastValues: End Property
Public Property Set ForecastValues(ByVal Value As Object): Set m_ForecastValues = Value: End Property
Public Property Get StatusString() As String: StatusString = GetStatusString(Me.Status): End Property

Private Sub Class_Initialize()
    Set m_Properties = mUtilities.NewDict()
    Set m_ForecastValues = mUtilities.NewDict(False) ' Keys are dates/strings, not case-sensitive
End Sub

Public Sub Init(ByVal ds As cDataSource, ByVal arrDataSource As Variant, ByVal lngRow As Long)
    Dim cAff As Long, cTier As Long, cSubTier As Long, cItem As Long, cDesc As Long, cISD As Long, cStatus As Long, cSup As Long, cPOD As Long, cPOPct As Long
    cAff = ds.GetColStrict("Affiliate"): cTier = ds.GetColStrict("Tier"): cSubTier = ds.GetColStrict("SubTier")
    cItem = ds.GetColStrict("LocalItemNbr"): cDesc = ds.GetColStrict("Description"): cISD = ds.GetColStrict("ISD")
    cStatus = ds.GetColStrict("Status"): cSup = ds.GetColStrict("SupersededBy")
    cPOD = ds.GetCol("PhaseOutDate"): cPOPct = ds.GetCol("PhaseOutPercent")
    AddProp "Affiliate", arrDataSource(lngRow, cAff)
    AddProp "Tier", arrDataSource(lngRow, cTier)
    AddProp "SubTier", arrDataSource(lngRow, cSubTier)
    AddProp "LocalItemNbr", arrDataSource(lngRow, cItem)
    AddProp "Description", arrDataSource(lngRow, cDesc)
    AddProp "ISD", arrDataSource(lngRow, cISD)
    AddProp "Status", GetStatusEnum(arrDataSource(lngRow, cStatus))
    AddProp "SupersededBy", arrDataSource(lngRow, cSup)
    HandlePhaseOutInit arrDataSource, lngRow, cPOD, cPOPct
End Sub

Public Function GetForecastMultiplier(ByVal dteForecastDate As Date) As Double
    GetForecastMultiplier = 1
    If Me.IsPhasingIn And Me.PhaseInDate > 0 Then
        If FirstDayOfMonth(dteForecastDate) < FirstDayOfMonth(Me.PhaseInDate) Then
            GetForecastMultiplier = 0: Exit Function
        ElseIf FirstDayOfMonth(dteForecastDate) = FirstDayOfMonth(Me.PhaseInDate) Then
            GetForecastMultiplier = Me.PhaseInPercent: Exit Function
        End If
    End If
    If Me.IsPhasingOut And Me.PhaseOutDate > 0 Then
        If FirstDayOfMonth(dteForecastDate) > FirstDayOfMonth(Me.PhaseOutDate) Then
            GetForecastMultiplier = 0
        ElseIf FirstDayOfMonth(dteForecastDate) = FirstDayOfMonth(Me.PhaseOutDate) Then
            GetForecastMultiplier = Me.PhaseOutPercent
        End If
    End If
End Function

Public Sub MarkAsPhasingIn(ByVal dteDate As Date, ByVal dblPercent As Double)
    AddProp "IsPhasingIn", True
    AddProp "PhaseInDate", dteDate
    AddProp "PhaseInPercent", dblPercent
End Sub

Public Function DebugSummary() As String
    DebugSummary = Me.Affiliate & " | " & Me.LocalItemNbr & " | " & GetStatusString(Me.Status)
End Function

Public Sub AddProp(ByVal key As String, ByVal Value As Variant)
    Dim cleanValue As Variant
    If IsObject(Value) Then
        Set cleanValue = Value
    ElseIf IsDate(Value) Then
        cleanValue = CDate(Value)
    Else
        cleanValue = Trim$(CStr(Value))
    End If
    
    If m_Properties.Exists(key) Then
        m_Properties.item(key) = cleanValue
    Else
        m_Properties.Add key, cleanValue
    End If
End Sub

Private Function GetProp(ByVal key As String, Optional ByVal DefaultValue As Variant) As Variant
    If m_Properties.Exists(key) Then
        GetProp = m_Properties.item(key)
    Else
        ' --- THIS BLOCK IS NOW CORRECTLY FORMATTED ---
        If IsMissing(DefaultValue) Then
            GetProp = Empty
        Else
            GetProp = DefaultValue
        End If
    End If
End Function

Private Sub HandlePhaseOutInit(ByVal arrDataSource As Variant, ByVal lngRow As Long, ByVal colPOD As Long, ByVal colPOPct As Long)
    Dim varPhaseOutPct As Variant
    If colPOPct > 0 Then varPhaseOutPct = arrDataSource(lngRow, colPOPct)
    If IsNumeric(varPhaseOutPct) And varPhaseOutPct >= 0 And varPhaseOutPct <= 1 Then
        AddProp "PhaseOutPercent", CDbl(varPhaseOutPct)
    Else
        AddProp "PhaseOutPercent", DEFAULT_PHASE_OUT_PCT
    End If
    If Me.Status = psPhaseOut Or Me.Status = psDiscontinued Then
        If colPOD > 0 Then
            If IsDate(arrDataSource(lngRow, colPOD)) Then AddProp "PhaseOutDate", CDate(arrDataSource(lngRow, colPOD))
        End If
    End If
End Sub

Private Function FirstDayOfMonth(ByVal d As Date) As Date
    FirstDayOfMonth = DateSerial(Year(d), Month(d), 1)
End Function

Private Sub Class_Terminate()
    Set m_Properties = Nothing
    Set m_ForecastValues = Nothing
End Sub
